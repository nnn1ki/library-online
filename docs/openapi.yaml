openapi: '3.0.3'
info:
  title: Online library service
  version: '1.0'
servers:
  - url: http://library.istu.edu/
tags:
  - name: auth
    description: Методы, связанные с аутентификацией
  - name: profile
    description: Методы, связанные с профилем
  - name: catalog
    description: Методы, связанные с каталогом и поиском книг
  - name: basket
    description: Методы, связанные с корзиной
  - name: order
    description: Методы, связанные с заказами
  - name: library-settings
    description: Методы, связанные с параметрами системы

paths:
  /api/auth/login/:
    post:
      tags: 
        - auth
      summary: Получение пары токенов по имени пользователя и паролю. В будущем будет заменено на читательский билет и другие способы авторизации
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '401':
          description: Unauthorized
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tokens'
  /api/auth/bitrix-login/:
    post:
      tags: 
        - auth
      summary: Получение пары токенов по oauth на https://int.istu.edu/
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  description: Код авторизации от системы OAuth.
                  type: string
      responses:
        '401':
          description: Unauthorized
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tokens'
  /api/auth/refresh/:
    post:
      tags: 
        - auth
      summary: Получение новой пары токенов по refresh токену. Старый refresh токен станет невалиден
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh:
                  type: string
      responses:
        '401':
          description: Unauthorized
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tokens'
  /api/auth/logout/:
    post:
      tags: 
        - auth
      summary: Инвалидация refresh токена
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh:
                  type: string
      responses:
        '401':
          description: Unauthorized
        '200':
          description: OK

  /api/profile/self-info/:
    get:
      tags:
        - profile
      summary: Получение информации о себе
      security:
        - bearer: []
      responses:
        '401':
          description: Unauthorized
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileInfo'

  /api/book/:
    get:
      tags:
        - catalog
      summary: Список книг с фильтрами
      parameters:
        - name: library
          in: query
          description: Фильтрация по билблиотекам
          schema:
            $ref: "#/components/schemas/LibraryId"
        - name: expression
          in: query
          required: true
          description: Фильтрация с использованием сценариев поиска. Передается напрямую в ИРБИС. Символ $ используется для неполного совпадения. Символы + и * используются соответственно как ИЛИ и И.
          schema:
            type: string
            example: (A=Власов$*T=математика$)+A=Пушкин$
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
  /api/book/{id}/:
    get:
      tags:
        - catalog
      summary: Информация о книге по id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/BookId"
      responses:
        '404':
          description: Книга не найдена
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
  /api/book/announcement/:
    get:
      tags:
        - catalog
      summary: Получение списка новых книг в библиотеке
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
  
  /api/basket/:
    get:
      tags:
        - basket
      security:
        - bearer: []
      summary: Получение списка книг в корзине
      responses:
        '401':
          description: Unauthorized
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
    post:
      tags:
        - basket
      security:
        - bearer: []
      summary: Добавление книг в корзину
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                books:
                  description: Список книг, которые надо добавить в корзину
                  type: array
                  items:
                    $ref: "#/components/schemas/BookId"
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '404':
          description: Книга не найдена
  /api/basket/replace/:
    put:
      tags:
        - basket
      security:
        - bearer: []
      summary: Редактирование списка книг в корзине
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                books:
                  description: Новый список книгкорзины
                  type: array
                  items:
                    $ref: "#/components/schemas/BookId"
      responses:
        '401':
            description: Unauthorized
        '404':
          description: Книга не найдена
        '200':
          description: OK
  /api/basket/{id}/:
    delete:
      tags:
        - basket
      security:
        - bearer: []
      summary: Удаление книги из корзины    
      responses:
        '401':
          description: Unauthorized
        '404':
          description: Книга не найдена
        '200':
          description: OK  
  
  /api/library/:
    get:
      tags:
        - catalog
      summary: Получение списка библиотек
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Library'
  /api/library/{id}/:
    get:
      tags:
        - catalog
      summary: Информация о бибилиотеке по названию
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/LibraryId"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Library'
        '404':
          description: Библиотека не найдена

  /api/scenario/:
    get:
      tags:
        - catalog
      summary: Получить список фильтров для поиска книг
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'

  /api/order/:
    get:
      tags:
        - order
      security:
        - bearer: []
      summary: Получение списка заказов на пользователя
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '401':
          description: Unauthorized
    post:
      tags:
        - order
      security:
        - bearer: []
      summary: Создание нового заказа
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                library:
                  $ref: "#/components/schemas/LibraryId"
                books:
                  type: array
                  description: Список заказываемых книг
                  items:
                    $ref: "#/components/schemas/BookId"
                borrowed: 
                  type: array
                  description: Список долгов, которые будут принесены
                  nullable: true
                  items:
                    $ref: "#/components/schemas/OrderBookId"
      responses:
        '200':
          description: OK
        '400':
          description: Ошибка в заказе
        '401':
          description: Unauthorized
  /api/order/{id}/:
    get:
      tags:
        - order
      security:
        - bearer: []
      summary: Получение заказа по айди
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/OrderId"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '401':
          description: Unauthorized
    put:
      tags: 
        - order
      security:
        - bearer: []
      summary: Изменение заказа. Возможно только лишь сразу же после того, как заказ был создан
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/OrderId"
      requestBody:
        required: true
        content:
            application/json:
              schema:
                type: object
                properties:
                  library:
                    $ref: "#/components/schemas/LibraryId"
                  books:
                    type: array
                    description: Список заказываемых книг
                    items:
                      $ref: "#/components/schemas/BookId"
                  borrowed: 
                    type: array
                    description: Список долгов, которые будут принесены
                    nullable: true
                    items:
                      $ref: "#/components/schemas/OrderBookId"
      responses:
        '200':
          description: OK
        '400':
          description: Ошибка в заказе или статус закана не равен new
        '401':
          description: Unauthorized
        '404':
          description: Заказ не найден
    delete:
      tags: 
        - order
      security:
        - bearer: []
      summary: Отмена заказа. Возможно только пока заказ не был выдан
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/OrderId"
      responses:
        '200':
          description: OK
        '400':
          description: Статус заказа done или более поздний
        '401':
          description: Unauthorized
        '404':
          description: Заказ не найден

  /api/borrowed/:
    get:
      tags:
        - order
      security:
        - bearer: []
      summary: Получение списка взятых книг с автоматическим фильтром по тем, которые были выданы, но не возвращены (долги)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BorrowedBook"
        '401':
          description: Unauthorized

  /api/library-settings/:
    get:
      tags:
        - library-settings
      summary: Получение всех параметров системы
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LibraryParams"

    post:
      tags:
        - library-settings
      security:
        - bearer: []
      summary: Изменение параметров системы
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LibraryParams"
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden


components:
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Bearer токен, помещаемый в заголовок Authorization

  schemas:
    Tokens:
      type: object
      description: Пара токенов access и refresh
      properties:
        access:
          description: Токен, помещаемый в заголовок Authorization
          type: string
        refresh:
          description: Токен, использующийся для получения новой пары токенов
          type: string
    
    ProfileInfo:
      type: object
      description: Информация о пользователе
      properties:
        username:
          description: username пользователя
          type: string
        first_name:
          description: Имя 
          type: string
        last_name:
          description: Фамилия
          type: string
        groups:
          description: Группы пользователя
          type: array
          items:
            type: string
            enum:
              - Reader
              - Librarian

    BookId:
      type: string
      description: ID книги
      example: L711
    Book:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/BookId"
        library:
          description: Библиотека, в которой находятся книги
          $ref: "#/components/schemas/LibraryId"
        description:
          description: Полное библиографическое описание книги
          type: string
        year:
          description: Год издания книги
          type: number
        copies:
          description: Количество доступных к заказу экземпляров
          type: number
        can_be_ordered:
          description: Можно ли заказать книгу
          type: boolean
        links:
          description: Ссылки, сопровождающие книгу
          type: array
          items:
            type: object
            properties:
              url:
                description: Ссылка
                type: string           
              description:
                description: Описание ссылки
                type: string
        author:
          description: Авторы
          type: array
          items:
            type: string
        collective:
          description: Коллективы
          type: array
          items:
            type: string
        title:
          description: Заглавия
          type: array
          items:
            type: string
        isbn:
          description: ISBN
          type: array
          items:
            type: string
        language:
          description: Язык основного текста
          type: array
          items:
            type: string
        country:
          description: Страна
          type: array
          items:
            type: string
        city:
          description: Место издания (город)
          type: array
          items:
            type: string
        publisher:
          description: Издательство
          type: array
          items:
            type: string
        subject:
          description: Тематические рубрики
          type: array
          items:
            type: string
        keyword:
          description: Ключевые слова
          type: array
          items:
            type: string
        cover:
          description: Обложка книги
          type: string
          nullable: true
    
    LibraryId:
      type: number
      description: ID библотеки
      example: 1
    Library:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/LibraryId"
        description:
          description: Описание библиотеки
          type: string
          example: Библиотека ИрНИТУ
        address:
          description: Адрес библиотеки
          type: string
          example: г. Иркутск, ул. Лермонтова, 83
    
    Scenario:
      type: object
      description: Описывает сценарий фильтра при поиске
      properties:
        prefix:
          type: string
          description: Префикс
          example: K=
        description:
          type: string
          nullable: true
          description: Описание в произвольной форме
          example: Ключевое слово

    OrderStatus:
      type: object
      properties:
        status:
          description: Статус заказа
          type: string
          enum:
           - new
           - processing # Пока отсутствует
           - ready
           - done
           - cancelled
           - error
           - archived
        date:
          description: Дата присвоения статуса
          type: string
          format: date-time
          example: "2024-12-31"
        description:
          type: string
          description: Описание статуса
    OrderBookId:
      type: number
      description: ID взятой книги
    OrderBook:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/OrderBookId"
        book:
          $ref: "#/components/schemas/Book"
        status:
          type: string
          description: Статус книги
          enum:
            - ordered
            - handed
            - returned
            - cancelled
        handed_date:
          type: string
          description: Дата получения книги
          format: date
        to_return_date:
          type: string
          description: Срок сдачи книги
          format: date
        returned_date:
          type: string
          description: Дата сдачи книги
          format: date
    OrderId:
      type: number
      description: ID заказа
    Order:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/OrderId"
        books:
          description: Список заказанных книг
          type: array
          items:
            $ref: "#/components/schemas/OrderBook"
        statuses:
          description: Список статусов заказа
          type: array
          items:
            $ref: "#/components/schemas/OrderStatus"
        library:
          $ref: "#/components/schemas/Library"

    BorrowedBook:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/OrderBookId"
        book:
          $ref: "#/components/schemas/Book"
        order:
          $ref: "#/components/schemas/OrderId"
        handed_date:
          type: string
          description: Дата получения книги
          format: date
        to_return_date:
          type: string
          description: Срок сдачи книги
          format: date

    LibraryParams:
      type: object
      properties:
        max_books_per_order:
          type: number
          description: Максимальное количество книг в одном заказе
          example: 5
        max_books_per_reader:
          type: number
          description: Максимальное количество книг на руках читателя
          example: 15
        max_borrow_day:
          type: number
          description: Максимальное количество рабочих дней ожидания книг на выдачу
          example: 2
        max_extansions:
          type: number
          description: Максимальное количество продлений книг
          example: 5
        holidays:
          description: Список праздничных дней
          type: array
          items:
            type: string
            description: Праздничный день
            format: date